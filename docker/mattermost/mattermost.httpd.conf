<VirtualHost *:443>
	SSLEngine On

	SSLProtocol all -SSLv2

	SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA

	SSLCertificateFile /etc/pki/nginx/mattermost/ca.pem
	SSLCertificateKeyFile /etc/pki/nginx/mattermost/ca.key

  ServerName im.ite-ng.ru
  #ServerAdmin hostmaster@mydomain.com
  ProxyPreserveHost On

  # Set web sockets
  RewriteEngine On
  RewriteCond %{REQUEST_URI} /api/v[0-9]+/(users/)?websocket [NC,OR]
  RewriteCond %{HTTP:UPGRADE} ^WebSocket$ [NC,OR]
  RewriteCond %{HTTP:CONNECTION} ^Upgrade$ [NC]
  RewriteRule .* wss://127.0.0.1:8065%{REQUEST_URI} [P,QSA,L]
  RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f

  Header edit Content-Security-Policy: "frame-ancestors 'self'" "frame-ancestors https://*.ite-ng.ru"
  Header edit X-Frame-Options "SAMEORIGIN" "allow-from https://*.ite-ng.ru"

  <LocationMatch "^/api/v(?<apiversion>[0-9]+)/(?<apiusers>users/)?websocket">
    Require all granted
    ProxyPass ws://127.0.0.1:8065/api/v%{env:MATCH_APIVERSION}/%{env:MATCH_APIUSERS}websocket
    ProxyPassReverse ws://127.0.0.1:8065/api/v%{env:MATCH_APIVERSION}/%{env:MATCH_APIUSERS}websocket
    ProxyPassReverseCookieDomain 127.0.0.1 subdomain.domain.in
  </LocationMatch>

  <Location />
    Require all granted
    ProxyPass http://127.0.0.1:8065/
    ProxyPassReverse http://127.0.0.1:8065/
    ProxyPassReverseCookieDomain 127.0.0.1 im.ite-ng.ru
  </Location>

</VirtualHost>