#!/bin/bash

createHttpdConfig() {
DST_FILE=$1
if [ ! -z "${DST_FILE}" ] ; then
echo '####################################################
### container.ite-ng.ru/###WEB_ALIAS
####################################################
<VirtualHost *:80>
	Alias /###WEB_ALIAS ###WEB_DIR
	ServerName ###WEB_SERVER
	ServerAlias ###WEB_SERVER_ALIAS
	ServerAdmin ###WEB_ADMIN_EMAIL
	DocumentRoot "###WEB_DIR"
	ErrorLog /var/log/
	httpd/error-###WEB_ALIAS.log
	CustomLog /var/log/httpd/access-###WEB_ALIAS.log combined
	<Directory "###WEB_DIR/">
		AllowOverride All
		Require all granted
		<IfModule mod_rewrite.c>
			Options -MultiViews
			RewriteEngine On
			RewriteCond %{REQUEST_FILENAME} !-f
			RewriteRule ^(.*)$ index.php [QSA,L]
		</IfModule>
	</Directory>
</VirtualHost>
' > $DST_FILE
fi
}

createNginxConfig() {
DST_FILE=$1
if [ ! -z "${DST_FILE}" ] ; then
echo 'server {
    listen 8080;
    server_name ###WEB_SERVER;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root ###WEB_DIR;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_pass unix:/var/run/php-fpm/www.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}' > $DST_FILE
fi
}

runInstall() {
  RUN=$1
  sleep 1;
  if [ ! -z "${RUN}" ] ; then
     echo $RUN
     eval ${RUN[@]}
  fi
}

declare -A ARGS

ARGS=( [ENGINE]=httpd [NODEJS]= [CERTS]= [SHOW]= [PASSWD]= [YUM]= [DEPLOY]= [SYMFONY]= [MODE]=dev [VHOST]= [XDEBUG_CLIENT]= \
       [git_clone_link]= [git_clone_dir]=  \
       [database_host]= [database_name]= [database_port]= [database_user]= [database_password]= \
       [console]= \
       [web_dir]= [web_conf]= [web_server]= [web_server_alias]= [web_alias]= [web_admin_email]=nikolns@ite-ng.ru  )
STATUS=''
FILE_NAME=sys.credentials
TMP=''
for KEY in "${!ARGS[@]}";
do
    TMP=$(echo $(printenv $KEY))
    if [ ! -z "$TMP" ] ; then
            ARGS[$KEY]=$TMP
            echo $TMP
    fi
done

if [ -z "${ARGS[web_server_alias]}" ]; then
    ARGS[web_server_alias]=php$(php -v | sed -e "/^PHP/!d" -e "s/.* \([0-9]\+\.[0-9]\+\.[0-9]\+\).*$/\1/" -e "s/\(.*\)[0-9])*/\1/" -e "s/[^0-9]//g").${ARGS[web_alias]}
fi

if [ ! -z "${ARGS[SHOW]}" ]; then
  for KEY in "${!ARGS[@]}";
  do
      echo [$KEY] = ${ARGS[$KEY]};
  done
else
  for KEY in "${!ARGS[@]}";
  do
      unset $KEY
  done
fi

if [ "${ARGS[MODE]}" == "prod" ]; then
  echo ".";
  rm -rf /etc/php.d/xdebug.ini
  rm -rf /root/src
  for value in $(ls /usr/local/bin/ | grep -ve 'container' | grep 'init.') ;
  do
     rm -rf /usr/local/bin/$value
  done
  echo '' > /root/.bash_history
  rm -rf /opt/WWW/container.ite-ng.ru/conf/.composer
  rm -rf /root/.composer
  rm -rf /root/.gitconfig
else
  if [[ ! -z "${ARGS[XDEBUG_CLIENT]}" ]] ; then
    sed -i -e "s@xdebug.client_host = .*@xdebug.client_host = ${ARGS[XDEBUG_CLIENT]}@g" /etc/php.d/xdebug.ini
  fi
fi

if [ ! -z "${ARGS[YUM]}" ]; then echo "." && rpm -e --nodeps yum ; fi

if [[ ! -z "${ARGS[PASSWD]}" && -d "/root/install" && -f "/root/install/${FILE_NAME}" ]] ; then
  echo "."
  echo $(cat /root/install/${FILE_NAME} | grep PASSWD | sed -r 's/.*=(.*)$/\1/') | passwd --stdin root > /dev/null
fi

if [ ! -z "${ARGS[CERTS]}" ]; then echo "." && ln -s ${ARGS[CERTS]} /etc/pki ; fi

if [ ! -z "${ARGS[NODEJS]}" ] ; then
    STATUS=$(curl -Is https://rpm.nodesource.com/setup_${ARGS[NODEJS]}.x | head -1 | grep "200")
    if [ ! -z "${STATUS}" ] ; then
        rm -rf /var/cache/yum && \
        yum remove -y nodejs && \
        yum clean all && \
        curl --silent --location https://rpm.nodesource.com/setup_${ARGS[NODEJS]}.x | bash -  && \
        yum install -y nodejs yarn
    fi
fi

if [[ ! -z "${ARGS[git_clone_link]}" && ! -z "${ARGS[git_clone_dir]}" &&  -d "${ARGS[git_clone_dir]}" ]] ; then
  echo "GIT.... cloning to [${ARGS[git_clone_dir]}] from  [${ARGS[git_clone_link]}]"
  git -C ${ARGS[git_clone_dir]} clone ${ARGS[git_clone_link]}
fi

case ${ARGS[ENGINE]} in
    "httpd" )
          echo -e 'start apache2\n' | supervisorctl -i 2>&1
          if [[ ! -z "${ARGS[DEPLOY]}" && ! -z "${ARGS[web_dir]}" &&  -d "${ARGS[web_dir]}" ]] ; then
            if [[  ! -z "${ARGS[web_conf]}" &&  -f "${ARGS[web_conf]}" ]] ; then
              echo "DEPLOYING CONFIG...."
              echo "copy ${ARGS[web_conf]} to /etc/httpd/conf.d/"
              cp ${ARGS[web_conf]} /etc/httpd/conf.d/vhost.conf
              echo "permission apache.apache ${ARGS[web_dir]}"
              chown -R apache.apache ${ARGS[web_dir]}
              restartHttpd
              runInstall "${ARGS[console]}"

              exit 0
            else
              echo "WRONG DEPLOYING CONFIG....${ARGS[ENGINE]}"
            fi
            if [[  ! -z "${ARGS[SYMFONY]}" &&  ! -z "${ARGS[web_server]}" && ! -z "${ARGS[web_alias]}" ]] ; then
              echo "DEPLOYING SYMFONY...."
              createHttpdConfig /etc/httpd/conf.d/vhost.conf
              sed -i -e "s@###WEB_ALIAS@${ARGS[web_alias]}@g" -i -e "s@###WEB_SERVER_ALIAS@${ARGS[web_server_alias]}@g" -i -e "s@###WEB_SERVER@${ARGS[web_server]}@g" -i -e "s@###WEB_DIR@${ARGS[web_dir]}@g" -i -e "s/###WEB_ADMIN_EMAIL/${ARGS[web_admin_email]}/g" /etc/httpd/conf.d/vhost.conf
              echo "permission apache.apache ${ARGS[web_dir]}"
              chown -R apache.apache ${ARGS[web_dir]}/..
              restartHttpd
              runInstall "${ARGS[console]}"

              exit 0
            else
              echo "WRONG DEPLOYING SYMFONY....${ARGS[ENGINE]}"
            fi
          else
            echo "WRONG PATH....[${ARGS[web_dir]}] or argument not set [${ARGS[DEPLOY]}]"
          fi
        ;;
    "nginx" )
          echo -e 'start nginx\n' | supervisorctl -i 2>&1
          if [[ ! -z "${ARGS[DEPLOY]}" && ! -z "${ARGS[web_dir]}" &&  -d "${ARGS[web_dir]}" ]] ; then
            if [[  ! -z "${ARGS[web_conf]}" &&  -f "${ARGS[web_conf]}" ]] ; then
              echo "DEPLOYING CONFIG...."
              echo "copy ${ARGS[web_conf]} to /etc/nginx/conf.d/"
              cp ${ARGS[web_conf]} /etc/nginx/conf.d/vhost.conf
              echo "permission nginx.nginx ${ARGS[web_dir]}"
              chown -R nginx.nginx ${ARGS[web_dir]}
              restartHttpd
              runInstall "${ARGS[console]}"

              exit 0
            else
              echo "WRONG DEPLOYING CONFIG....${ARGS[ENGINE]}"
            fi
            if [[  ! -z "${ARGS[SYMFONY]}" &&  ! -z "${ARGS[web_server]}" ]] ; then
                echo "DEPLOYING SYMFONY...."
                createNginxConfig /etc/nginx/conf.d/vhost.conf
                sed -i -e "s@###WEB_SERVER@${ARGS[web_server]}@g" -i -e "s@###WEB_DIR@${ARGS[web_dir]}@g" /etc/nginx/conf.d/vhost.conf
                echo "permission nginx.nginx ${ARGS[web_dir]}"
                chown -R nginx.nginx ${ARGS[web_dir]}/..
                restartNginx
                runInstall "${ARGS[console]}"

                exit 0
              else
                echo "WRONG DEPLOYING SYMFONY....${ARGS[ENGINE]}"
              fi
          else
            echo "WRONG PATH....[${ARGS[web_dir]}] or argument not set [${ARGS[DEPLOY]}]"
          fi
        ;;
esac


rm -rf /root/install