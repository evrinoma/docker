#!/bin/sh
# $Id: weblogic,v 1.0 2011/07/29 15:42:01 Nikolay Nikolaev <evrinoma@gmail.com>
#
# weblogic    Starts, Stops and Restart Weblogic Server.
#
### BEGIN INIT INFO
# Provides:          primavera
# Required-Start:    $network $named $remote_fs $syslog $sshd
# Should-Start:
# Required-Stop:     $network $named $remote_fs $syslog $sshd
# Should-Stop:
# Default-Start:     3 
# Default-Stop:      0 1 2 4 6
# Short-Description: Primavera on WebLogic Server
# Description:       Starts the Primavera webserver.
### END INIT INFO

HTTP=http://localhost:7001/console
NAMESEARCH=startWebLogic
TIMEOUT=900
STATE_SUC=32
RETVAL=0
COUNT=0

MKSEC=0
DELAYMKSEC=10

###PRIMAVERA_INSERT

APP_START=startWLS
APP_STOP=startWLS

if ! [ -x $WEBLOGIC_SRW ] ; then 
    echo "ERROR: "$WEBLOGIC_SRW" not found"
    exit 0
fi
if ! [ -x $DOMAIN_HOME ] ; then
    echo "ERROR: "$DOMAIN_HOME" not found"
    exit 0
fi

waiting() {
# Waiting loading daemon

until [ $COUNT -eq $TIMEOUT ]
do
response=$(curl --write-out %{http_code} --silent --output /dev/null $HTTP)
if [ $response -eq 302  ]; then
#echo "server running " $response
return $STATE_SUC
fi
COUNT=$[ $COUNT+1 ]
MKSEC=0
    until [ $MKSEC -eq $DELAYMKSEC ]
    do
	case $[ $MKSEC & 0x03] in
	0)echo -en "\\r"
	;;
	1)echo -en "|\r"
	;;
	2)echo -en "/\r"
	;;
	3)echo -en "-\r"
	;;
	esac
    MKSEC=$[ $MKSEC+1 ]
    usleep 100000
    done

#sleep 1
done

return 0
}


start() {
# Start daemons.
state_server
RETVAL=$?
if [ $RETVAL -eq 0 ]; then 
    echo -n $"Starting WebLogicServer.... "
    /bin/bash -c "$APP_START > $LOG_START" &
waiting
RETVAL=$?
    if [ $RETVAL -eq $STATE_SUC ]; then
        echo -n $"Starting WebLogicServer: "
	echo -e '\E[37;32m'"\033[1m\t\t\t\t\t\t\t\t\t\t\tdone\033[0m"
    fi
else
	echo -n $"WebLogicServer is: "
	echo -e '\E[37;31m'"\033[1m\t\t\t\t\t\t\t\t\t\t\t\trunning\033[0m"
fi
RETVAL=$?
return $RETVAL
}

stop_server() {
    $APP_STOP > $LOG_STOP
}

stop() {
# Stop daemons.
state_server
RETVAL=$?
if [ $RETVAL -eq 1 ]; then 
    echo -n $"Shutting down WebLogicServer: "
    stop_server
    echo -e '\E[37;33m'"\033[1m\t\t\t\t\t\t\t\t\t\t\tdone\033[0m"
else
    echo -e $"Shutting down WebLogicServer: "
    echo -n $"WebLogicServer is: "
    echo -e '\E[37;29m'"\033[1m\t\t\t\t\t\t\t\t\t\t\t\tunused\033[0m"
fi
RETVAL=$?
[ $RETVAL -eq 0 ]
return $RETVAL
}

restart() {
# Restart daemons.
stop

until [ $COUNT -eq $TIMEOUT ]
do

state_server
RETVAL=$?

if [ $RETVAL  -eq 0 ] ; then
    start
    return 1
fi

COUNT=$[ $COUNT+1 ]

stop_server

MKSEC=0
    until [ $MKSEC -eq $DELAYMKSEC ]
    do
	case $[ $MKSEC & 0x03] in
	0)echo -en "\\r"
	;;
	1)echo -en "|\r"
	;;
	2)echo -en "/\r"
	;;
	3)echo -en "-\r"
	;;
	esac
    MKSEC=$[ $MKSEC+1 ]
    usleep 100000
    done
done

return 0
}

state_server(){
state=$(ps -e | grep $NAMESEARCH | awk '{print $1}') 
if [ -z  $state ] ; then
    return 0
else
    return 1
fi 
}

status(){
# Status daemons.
echo -n $"WebLogicServer is: "
state_server
RETVAL=$?
if [ $RETVAL  -eq 0 ] ; then
    echo -e '\E[37;29m'"\033[1m\t\t\t\t\t\t\t\t\t\t\t\tunused\033[0m"
    return 0
else
    echo -e '\E[37;31m'"\033[1m\t\t\t\t\t\t\t\t\t\t\t\trunning\033[0m"
    return 1
fi
}

# See how we were called.
case "$1" in
    start)
	    start
	;;
    stop)
	    stop
	;;
    restart)
	    restart
	;;
    status)
	    status
	;;
    *)
	echo "Usage: weblogic {start|stop|restart|status}"
	exit 1
    esac
exit $?